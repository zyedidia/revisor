local knit = require("knit")

local csrc = knit.glob("*.c")
local ssrc = knit.glob("*.S")
local obj = knit.join(knit.extrepl(csrc, ".c", ".o"), knit.extrepl(ssrc, ".S", ".o"))
obj = knit.prefix(obj, ".")

local newlib := build-newlib/libc.a
local flags := -mcmodel=kernel -fno-pic

return b{
    $ kernel.elf: $obj link/kernel.ld[I]
        gcc -nostdlib $input $newlib -o $output -Tlink/kernel.ld -static $flags

    $ .%.o:D[.%.d]: %.c
        gcc -O2 -nostdlib -Inewlib/newlib/libc/include -MMD -c $input -o $output $flags
    $ .%.o: %.S
        gcc -nostdlib -c $input -o $output $flags

    $ build-newlib:V: build-newlib/libc.a

    $ build-newlib/libc.a build-newlib/libg.a build-newlib/libm.a:
        mkdir -p build-newlib && cd build-newlib && CFLAGS="-D_FORITY_SOURCE=0 $flags" ../newlib/newlib/configure --disable-multilib --host x86_64 --target x86_64 && make
}
